plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.2-SNAPSHOT" apply false
}

architectury {
    minecraft = project.minecraft_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${project.parchment_minecraft_version}:${project.parchment_version}@zip")
        }
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    group = 'cx.rain.mc.nbtedit'
    archivesBaseName = project.archives_base_name

    version = project.mod_version
    if (System.getenv('GITHUB_SHA') != null) {
        version += "-${System.getenv('GITHUB_SHA').substring(0, 7)}"
    } else if (System.getenv('JITPACK') == 'true') {
        version += "-${System.getenv('VERSION')}"
    }

    var release = false
    if (release || (System.getenv("MOD_RELEASE") == 'true')) {
        version += '-release'
    } else {
        version += '-dev'
    }
    project.version = version;

    repositories {
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    processResources {
        var resourcesToReplace = ['build.properties', 'META-INF/mods.toml', 'pack.mcmeta', 'fabric.mod.json']
        var replaceTokens = [
                minecraft_version: minecraft_version,
                mod_id: mod_id,
                mod_name: mod_name,
                mod_full_name: mod_full_name,
                mod_version: mod_version,
                fabric_loader_version: fabric_loader_version,
                fabric_api_version: fabric_api_version,
                forge_loader_version: forge_loader_version,
                forge_version: forge_version,
                next_minecraft_version: next_minecraft_version,
                next_forge_loader_version: next_forge_loader_version,
                next_forge_version: next_forge_version
        ]

        inputs.properties replaceTokens
        filesMatching(resourcesToReplace) {
            expand replaceTokens
        }

        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}
