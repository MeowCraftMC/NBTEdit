plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'me.shedaniel.unified-publishing' version '0.1.+'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(':nbtedit-common').loom.accessWidenerPath
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    modRuntimeOnly "com.terraformersmc:modmenu:${rootProject.mod_menu_version}"

    modCompileOnly "me.lucko:fabric-permissions-api:${rootProject.fabric_permission_api_version}"

    common(project(path: ':nbtedit-common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':nbtedit-common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'build_version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

shadowJar {
    exclude 'architectury.common.json'

    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(':nbtedit-common').sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = project.name
            version = mavenVersion
            from components.java
        }
    }
}

unifiedPublishing {
    project {
        displayName = "NBTEdit Fabric ${project.minecraft_version}-${project.mod_version}"
        version = publishVersion
        gameVersions = [project.minecraft_version]
        gameLoaders = ['fabric']
        releaseType = 'release'
        changelog = 'See the GitHub repository for more information. \nhttps://github.com/qyl27/NBTEdit'

        mainPublication tasks.remapJar

        relations {
            depends {
                curseforge = 'fabric-api'
                modrinth = 'fabric-api'
            }
        }

        curseforge {
            token = Objects.requireNonNullElse(System.getenv('CURSEFORGE_TOKEN'), "")
            id = '678133'
        }

        modrinth {
            token = Objects.requireNonNullElse(System.getenv('MODRINTH_TOKEN'), "")
            id = 'Vr2eDeCw'
        }
    }
}
